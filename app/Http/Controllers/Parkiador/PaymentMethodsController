<?php
namespace App\Http\Controllers\Parkiador;

use App\Http\Controllers\Controller;
use App\Http\Requests\StorePaymentMethodRequest;
use App\Http\Requests\UpdatePaymentMethodRequest;
use App\Models\PaymentMethod;
use Illuminate\Http\RedirectResponse;
use Illuminate\View\View;

class PaymentMethodsController extends Controller
{
    public function index(): View
    {
        $methods = auth()->user()->paymentMethods;
        return view('parkiador.payment-methods.index', compact('methods'));
    }

    public function create(): View
    {
        return view('parkiador.payment-methods.create');
    }

    public function store(StorePaymentMethodRequest $request): RedirectResponse
    {
        auth()->user()->paymentMethods()->create($request->validated());
        return redirect()->route('parkiador.payment-methods.index')
                         ->with('success', 'Método de pago agregado');
    }

    public function edit(PaymentMethod $paymentMethod): View
    {
        $this->authorize('view', $paymentMethod);
        return view('parkiador.payment-methods.edit', compact('paymentMethod'));
    }

    public function update(UpdatePaymentMethodRequest $request, PaymentMethod $paymentMethod): RedirectResponse
    {
        $this->authorize('update', $paymentMethod);
        $paymentMethod->update($request->validated());
        return redirect()->route('parkiador.payment-methods.index')
                         ->with('success', 'Método de pago actualizado');
    }

    public function destroy(PaymentMethod $paymentMethod): RedirectResponse
    {
        $this->authorize('delete', $paymentMethod);
        $paymentMethod->delete();
        return back()->with('success', 'Método de pago eliminado');
    }
}
